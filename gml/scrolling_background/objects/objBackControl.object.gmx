<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Main script
//Building Y is a position where sprites create.
building_y = room_height
//Personal settings for each rooms
if room = test
{
    //Room Background Depth is depth of all background's images
    room_background_depth = 0
    //Creating lists of settings
    backgrounds = ds_list_create();
    backgrounds_dept = ds_list_create();
    backgrounds_sp = ds_list_create();
    backgrounds_spr_dept = ds_list_create();
    backgrounds_spr_sp = ds_list_create();
    backgrounds_displacement_y = ds_list_create();
    //This list includes sprintes' name that appears from DOWN to UP
    ds_list_add(backgrounds,sprTESTground,sprTESTbushes,sprTESTmountains,sprTESTcloud00,sprTESTcloud01,sprTESTcloud02)
    //This list includes depth of the sprites. The more the number the slower a sprite moves.
    ds_list_add(backgrounds_dept,1,1.5,2,1.75,1.5,1.25)
    //This list includes speed of moving sprites (optionally). Positive - moves right. Negative - moves left. 
    ds_list_add(backgrounds_sp,0,0,0,0.125,0.25,0.5)
    //This list includes sprites' depths. It adds with room_background_depth for one sprite.
    ds_list_add(backgrounds_spr_dept,0,0,0,0,0,0)
    //This list includes sprites' speeds (optionally).
    ds_list_add(backgrounds_spr_sp,0,0,0,0,0,0)
    //This list includes sprites' displacement. These numbers affects on building_y. Positive - gets up. Negative - gets down.
    ds_list_add(backgrounds_displacement_y,0,0,0,0,0,0,0,0,0,0,0,0)
    
    //Main cycle of creating of background.
    //It creates all sprites from list of backgrounds.
    for (i = 0;i &lt; ds_list_size(backgrounds);i++)
    {
        //Getting all information from the lists.
        sprite_index = ds_list_find_value(backgrounds,i)
        depth = ds_list_find_value(backgrounds_spr_dept,i) + room_background_depth
        image_speed = ds_list_find_value(backgrounds_spr_sp,i)
        
        /*building_y works this way: from the bottom of a room creates
        a sprite from beginning of the list. After creating of the sprite,
        it starts again. building_y decreases by sprite_heigh and
        backgrounds_displacement_y. The next sprite creates on a new
        position of Y (depends on building_y).
        */
        building_y -= sprite_height + ds_list_find_value(backgrounds_displacement_y,i)
        dept = ds_list_find_value(backgrounds_dept,i)
        sp = ds_list_find_value(backgrounds_sp,i)
        //This cycle creates a line of sprites along X
        for (j = 0;j &lt; (view_wview div sprite_width)+2;j++)
        {
            obj = instance_create(sprite_width*j,building_y,objBack);
            obj.sprite_index = sprite_index;
            obj.depth = depth
            obj.image_speed = image_speed
            obj.dept = dept;
            obj.sp = sp
            //Sprite x displacement
            obj.x_disp = sprite_width*j
            obj.num = (view_wview div sprite_width)+2;
        };
    };
};
/*  Those images were used only for the video demonstration.
    https://youtu.be/lp8qxRUYdXI
    I saved it as example.

else if room = dd
{
    room_background_depth = 0
    backgrounds = ds_list_create();
    backgrounds_dept = ds_list_create();
    backgrounds_sp = ds_list_create();
    backgrounds_spr_dept = ds_list_create();
    backgrounds_spr_sp = ds_list_create();
    backgrounds_displacement_y = ds_list_create();
    ds_list_add(backgrounds,sprBackDD00,sprBackDD01,sprBackDD02,sprBackDD03,sprBackDD04,sprBackDD05,sprBackDD06,sprBackDD07,sprBackDD08,sprBackDD09,sprBackDD10,sprBackDD11)
    ds_list_add(backgrounds_dept,1.5,2,2.5,3,3.5,4,4.5,5,4,3.5,3,2.5)
    ds_list_add(backgrounds_sp,0,0,0,0,0,0,0,0,0.125,0.25,0.5,1)
    ds_list_add(backgrounds_spr_dept,0,0,0,0,0,0,0,0,0,0,0,0)
    ds_list_add(backgrounds_spr_sp,0,0,0,0,0,0,0,0,0,0,0,0)
    ds_list_add(backgrounds_displacement_y,0,0,0,0,0,0,0,0,0,0,0,0)
    
    for (i = 0;i &lt; ds_list_size(backgrounds);i++)
    {
        sprite_index = ds_list_find_value(backgrounds,i)
        depth = ds_list_find_value(backgrounds_spr_dept,i)
        image_speed = ds_list_find_value(backgrounds_spr_sp,i)
        
        building_y -= sprite_height + ds_list_find_value(backgrounds_displacement_y,i)
        dept = ds_list_find_value(backgrounds_dept,i) + room_background_depth
        sp = ds_list_find_value(backgrounds_sp,i)
        for (j = 0;j &lt;= (view_wview div sprite_width)+2;j++)
        {
            obj = instance_create(sprite_width*j,building_y,objBack);
            obj.sprite_index = sprite_index;
            obj.depth = depth
            obj.image_speed = image_speed
            obj.dept = dept;
            obj.sp = sp
            obj.num = (view_wview div sprite_width)+2;
        };
    };
};
else if room = ghz
{
    room_background_depth = 0
    backgrounds = ds_list_create();
    backgrounds_dept = ds_list_create();
    backgrounds_sp = ds_list_create();
    backgrounds_spr_dept = ds_list_create();
    backgrounds_spr_sp = ds_list_create();
    backgrounds_displacement_y = ds_list_create();
    ds_list_add(backgrounds,sprBackGHZG,sprBackGHZW00,sprBackGHZW01,sprBackGHZW02,sprBackGHZW03,sprBackGHZW04,sprBackGHZW05,sprBackGHZW06,sprBackGHZW07,sprBackGHZW08,sprBackGHZW09,sprBackGHZW10,sprBackGHZW11,sprBackGHZW12,sprBackGHZW13,sprBackGHZW14,sprBackGHZR,sprBackGHZM,sprBackGHZsky00,sprBackGHZsky01,sprBackGHZsky02)
    ds_list_add(backgrounds_dept,1,1.25,1.5,1.75,2,2.25,2.5,2.75,3,3.25,3.5,3.75,4,4.25,4.5,4.75,4.75,5.25,3.5,3,2.5)
    ds_list_add(backgrounds_sp,0,0.6,0.56,0.52,0.48,0.44,0.4,0.36,0.32,0.28,0.24,0.2,0.16,0.12,0.08,0.04,0,0,0.25,0.5,1)
    ds_list_add(backgrounds_spr_dept,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
    ds_list_add(backgrounds_spr_sp,0,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.06,0.2,0,0,0,0)
    ds_list_add(backgrounds_displacement_y,0,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,0,0,0,0)
    
    for (i = 0;i &lt; ds_list_size(backgrounds);i++)
    {
        sprite_index = ds_list_find_value(backgrounds,i)
        depth = ds_list_find_value(backgrounds_spr_dept,i)
        image_speed = ds_list_find_value(backgrounds_spr_sp,i)
        building_y -= sprite_height + ds_list_find_value(backgrounds_displacement_y,i)
        dept = ds_list_find_value(backgrounds_dept,i)
        sp = ds_list_find_value(backgrounds_sp,i) + room_background_depth
        for (j = 0;j &lt;= (view_wview div sprite_width)+2;j++)
        {
            obj = instance_create(sprite_width*j,building_y,objBack);
            obj.sprite_index = sprite_index;
            obj.depth = depth
            obj.image_speed = image_speed
            obj.dept = dept;
            obj.sp = sp
            obj.num = (view_wview div sprite_width)+2;
        };
    };
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///For testing
//If you don't want it, delete Draw Event for this object and set it invisible.
//FPS
draw_text(0,0,string(fps_real)+"#"
//Fake X
+string(objCamera.x)+"#"
//Speed
+string(objCamera.sp)+"#"
//Movement direction
+string(objCamera.sp_direction))
draw_set_colour(c_black)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
