<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = 0 //state of timer
final_time = 0
msec = 0
sec = 0
minuts = 0
ctime = 0 //It's time that is shown on the timer
time = 0 //If you learn the code, you'll know what it's for; look for Step Event, "if state = 1..."
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if state = 0 //Shows the final time of the timer
{
    ctime = final_time
};
if state = 2 //Shows current time from the start
{
    ctime = current_time - time
};
//Cuts milliseconds, seconds, and minutes.
msec = ctime mod 1000
sec = ctime div 1000
minuts = sec div 60
sec -= minuts * 60

//For beautiful text
if msec = 0 {msec = "000"}
if msec &lt; 10 {msec = "00"+string(msec)}
if msec &lt; 100 {msec = "0"+string(msec)}
if sec &lt; 10 {sec = "0"+string(sec)}
if minuts &lt; 10 {minuts = "0"+string(minuts)}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if state = 0 //Ready to start; shows final time
{
    if keyboard_check_pressed(vk_enter) //Starts countdown to the start
    {
        state = 1
        time = current_time
    };
};
if state = 1 //Countdown to the start
{
    if current_time - time &gt;= 3 * 1000 //3 seconds to go
    {
        state = 2
        time += 3000
    };
};
if state = 2 //Timer counts time
{
    if keyboard_check_pressed(vk_enter) //Stops timer; shows final time
    {
        state = 0
        final_time = current_time - time
    };
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if state = 0 //Shows the final time
{
    text = (string(minuts)+":"+string(sec)+":"+string(msec))
};
else if state = 1 //Shows countdown to the start
{
    text = string(3 - (current_time - time) div 1000)
};
else if state = 2 //Shows current time
{
    text = (string(minuts)+":"+string(sec)+":"+string(msec))
};

draw_set_halign(fa_center)
draw_set_valign(fa_middle)
draw_set_font(font0)
draw_set_colour(c_black)
draw_text(room_width/2,room_height/2,text)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
